@model WebInventory.ViewModels.RegistrationVM

@{
    //ViewBag.Title = "Signup";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

@*@if (TempData["Message"] != null)
{
    if (TempData["AlertType"] != null)
    { <div class="alert alert-success text-center" style="float: none;" role="alert"><b>@TempData["Message"]</b> </div> }
    else
    { <div class="alert alert-warning text-center" style="float: none;" role="alert"><b>@TempData["Message"]</b> </div> }
}*@

<link rel="stylesheet" href="//code.jquery.com/ui/1.11.1/themes/smoothness/jquery-ui.css">
<link href="~/Content/Fonts/font-awesome/css/font-awesome.min.css" rel="stylesheet" />
<link href="~/Content/validationEngine.jquery.css" rel="stylesheet" />
<link href="~/Content/toastr.min.css" rel="stylesheet" />
<style type="text/css">
    body {
        background: url(../content/Images/pattern.png) 0 bottom repeat !important;
    }
</style>

<div class="container spacerM10">
    <div class="col-md-1"></div>
    <div class="col-md-10 signup">
        <fieldset>
            <legend>
                <span class="group-addon fa-titles"><i class="fa fa-user"></i></span>
                <h2 style="display: inline; margin-left: 1%;">Registration</h2>
            </legend>

            <form id="frmProfile">
                <div id="divMessage" class="row-fluid text-center alert alert-danger" style="display: none;">
                </div>
                <div class="col-md-6">
                    <div class="panel panel-default">
                        <div class="panel-body">
                            <div class="col-md-12 divbtmborder spacer10">
                                <div class="text-upper">
                                    <h4>Account details</h4>
                                </div>
                            </div>
                            <div class="col-md-12 -spacer5">
                                @Html.LabelFor(model => model.LoginName, new { @class = "control-label" })
                            </div>
                            <div class="col-md-12  spacer10">
                                @Html.TextBoxFor(model => model.LoginName, new { @class = "form-control validate[required,custom[email]]", autocomplete = "off", data_errormessage = "Email address is required", placeholder = "Emaild to login*" })
                                @Html.ValidationMessageFor(model => model.LoginName, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-md-12 -spacer5">
                                @Html.LabelFor(model => model.Password)
                            </div>
                            <div class="col-md-12  spacer10">
                                @Html.PasswordFor(model => model.Password, new { @class = "form-control validate[required,minSize[5]]", autocomplete = "off", data_errormessage = "Password min 5 characters reuqired", placeholder = "password*" })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-md-12 -spacer5">
                                @Html.LabelFor(model => model.ConfirmPassword)
                            </div>
                            <div class="col-md-12 spacer10">
                                @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control validate[required,equals[Password]]", autocomplete = "off", data_errormessage = "Should match with Password", placeholder = "Confirm Password*" })
                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="panel panel-default">
                        <div class="panel-body">
                            <div class="col-md-12 divbtmborder spacer10">
                                <div class="text-upper">
                                    <h4>Personal details</h4>
                                </div>
                            </div>
                            <div class="col-md-12 -spacer5">
                                @Html.Label("Full Name")
                            </div>

                            <div class="col-md-2 spacer10">
                                @Html.DropDownListFor(model => model.Title, new SelectList(Model.ListTitles, "Value", "Text"), new { @class = "form-control profileTitle", Placeholder = "Title" })
                            </div>
                            <div class="col-md-5 spacer10">
                                @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control validate[required]", autocomplete = "off", data_errormessage = "First Name is required", Placeholder = "First Name*" })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-5 spacer10">
                                @Html.TextBoxFor(model => model.LastName, new { @class = "form-control validate[required]", autocomplete = "off", data_errormessage = "Last Name is required", Placeholder = "Last Name*" })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-12 -spacer5">
                                @Html.LabelFor(model => model.CompanyNm)
                            </div>
                            <div class="col-md-12 spacer10">
                                @Html.TextBoxFor(model => model.CompanyNm, new { @class = "form-control validate[required]", data_errormessage = "Company Name is required" })
                                @Html.ValidationMessageFor(model => model.CompanyNm, "", new { @class = "text-danger", autocomplete = "off", placeholder = "Current Company Name*" })
                            </div>

                            <div class="col-md-12 -spacer5">
                                @Html.LabelFor(model => model.birthdate)
                            </div>
                            <div class="col-md-12 spacer10">
                                @*@Html.TextBoxFor(model => model.birthdate, "{0:dd/MM/yyyy}", new { @class = "form-control validate[required,funcCall[DateFormat[]] date", data_errormessage = "Select Appointment Date" })*@
                                @Html.TextBox("birthdate", "", "{0:dd/MM/yyyy}", new { @class = "form-control validate[required,funcCall[DateFormat[]] date", data_errormessage = "Select Appointment Date" })
                                @Html.ValidationMessageFor(model => model.birthdate, "", new { @class = "text-danger", autocomplete = "off", placeholder = "Date of Birth*" })
                            </div>

                            <div class="col-md-12 -spacer5">
                                @Html.LabelFor(model => model.Designation)
                            </div>
                            <div class="col-md-12 spacer10">
                                @Html.TextBoxFor(model => model.Designation, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger", autocomplete = "off", placeholder = "Current Position*" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="panel panel-default">
                        <div class="panel-body">
                            <div class="col-md-12 divbtmborder spacer10">
                                <div class="text-upper">
                                    <h4>Other Information</h4>
                                </div>
                            </div>

                            <div class="col-md-12 -spacer5">
                                @Html.LabelFor(model => model.ReferenceThrough)
                            </div>
                            <div class="col-md-12 spacer10">
                                @Html.TextBoxFor(model => model.ReferenceThrough, new { @class = "form-control", autocomplete = "off", placeholder = "Referee" })
                                @Html.ValidationMessageFor(model => model.ReferenceThrough, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-md-12 -spacer5">
                                @Html.LabelFor(model => model.Address)
                            </div>
                            <div class="col-md-12 spacer10">
                                @Html.TextAreaFor(model => model.Address, new { @class = "form-control", autocomplete = "off", placeholder = "Current Address" })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-md-4 spacer10">
                                @Html.TextBoxFor(model => model.City, new { @class = "form-control validate[required]", autocomplete = "off", data_errormessage = "City is required", placeholder = "City*" })
                                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4 spacer10">
                                @Html.TextBoxFor(model => model.State, new { @class = "form-control validate[required]", autocomplete = "off", data_errormessage = "State is required", placeholder = "State*" })
                                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4 spacer10">
                                @*@Html.DropDownListFor(model => model.Country, ViewBag.Coutries as IEnumerable<SelectListItem>, new { @class = "form-control", placeholder = "State" })*@
                                @Html.DropDownListFor(model => model.Country, new SelectList(Model.ListCountries, "Value", "Text"), "Country", new { @class = "form-control validate[required]", placeholder = "Country*", data_errormessage = "Select Country" })
                                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                            </div>

                            @*<div class="col-md-12 -spacer5">
                                @Html.LabelFor(model => model.Zipcode)
                            </div>
                            <div class="col-md-12 spacer10">
                                @Html.TextBoxFor(model => model.Zipcode, new { @class = "form-control", autocomplete = "off", data_errormessage = "Postal Code is required", onkeypress = "DecValid(event,this,8)", onkeyup = "DecValid(event,this,8)", onpaste = "return false;", ondrop = "return false;" })
                                @Html.ValidationMessageFor(model => model.Zipcode, "", new { @class = "text-danger" })
                            </div>*@

                            <div class="col-md-12 -spacer5">
                                @Html.Label("Contact No")
                            </div>
                            @*<div class="col-md-2 spacer10">
                                @Html.TextBoxFor(model => model.Phone_Countrycd, new { @class = "form-control", min = 10, data_errormessage = "Contry Code is required", autocomplete = "off", Placeholder = "CoutryCode*", onkeypress = "DecValid(event,this,3)", onkeyup = "DecValid(event,this,3)", onpaste = "return false;", ondrop = "return false;" })
                                @Html.ValidationMessageFor(model => model.Phone_Countrycd, "", new { @class = "text-danger" })
                            </div>*@
                            <div class="col-md-4 spacer10">
                                @Html.TextBoxFor(model => model.Phone_STDcd, new { @class = "form-control", min = 10, data_errormessage = "Std Code is required", autocomplete = "off", Placeholder = "Std Code*", onkeypress = "DecValid(event,this,6)", onkeyup = "DecValid(event,this,4)", onpaste = "return false;", ondrop = "return false;" })
                                @Html.ValidationMessageFor(model => model.Phone_STDcd, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-8 spacer10">
                                @Html.TextBoxFor(model => model.Phone_No, new { @class = "form-control", min = 1000, data_errormessage = "Phone No is required", autocomplete = "off", Placeholder = "Phone No*", onkeypress = "DecValid(event,this,10)", onkeyup = "DecValid(event,this,10)", onpaste = "return false;", ondrop = "return false;" })
                                @Html.ValidationMessageFor(model => model.Phone_No, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-md-12 -spacer5">
                                @Html.Label("Mobile No")
                            </div>
                            @*<div class="col-md-4 spacer10">
                                @Html.TextBoxFor(model => model.Mobile_CountryCd, new { @class = "form-control validate[required,custom[integer]]", min = 10, data_errormessage = "Mobile Country Code is required", autocomplete = "off", Placeholder = "Coutry Code", onkeypress = "DecValid(event,this,4)", onkeyup = "DecValid(event,this,4)", onpaste = "return false;", ondrop = "return false;" })
                                @Html.ValidationMessageFor(model => model.Mobile_CountryCd)
                            </div>*@
                            <div class="col-md-12 spacer10">
                                @Html.TextBoxFor(model => model.Mobile_No, new { @class = "form-control validate[required,custom[integer]]", min = 1000, data_errormessage = "Mobile No is required", autocomplete = "off", placeholder = "Mobile no.", onkeypress = "DecValid(event,this,12)", onkeyup = "DecValid(event,this,8)", onpaste = "return false;", ondrop = "return false;" })
                                @Html.ValidationMessageFor(model => model.Mobile_No, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-md-12 -spacer5">
                                @Html.LabelFor(model => model.Website)
                            </div>
                            <div class="col-md-12 spacer10">
                                @Html.TextBoxFor(model => model.Website, new { @class = "form-control", autocomplete = "off", placeholder = "http://" })
                                @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-md-12 -spacer5">
                                @Html.LabelFor(model => model.BusinessType)
                            </div>
                            <div class="col-md-12 spacer10">
                                @*@Html.DropDownListFor(model => model.BusinessType, ViewBag.BusineTypes as IEnumerable<SelectListItem>, "Select business type", new { @class = "form-control" })*@
                                @Html.DropDownListFor(model => model.BusinessType, new SelectList(Model.ListBusinessTypes, "Value", "Text"), "Select business type", new { @class = "form-control validate[required]", autocomplete = "off", data_errormessage = "Select business type" })
                                @Html.ValidationMessageFor(model => model.BusinessType, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-md-12 -spacer5">
                                @Html.LabelFor(model => model.skypeid)
                            </div>
                            <div class="col-md-12 spacer10">
                                @Html.TextBoxFor(model => model.skypeid, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.skypeid, "", new { @class = "text-danger", autocomplete = "off" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row-fluid text-right">
                    <div class="col-md-12 panel-footer">
                        <input id="btnSignUp" data-req-url="@Url.Action("SignUp", "Account")" type="submit" value="Create" class="btn btn-themed" />
                        @Html.ActionLink("Cancel", "Index", "RegisterMember", new { @class = "btn btn-default" })
                    </div>
                    <span class="process"></span>
                </div>

            </form>
        </fieldset>
    </div>
    <div class="col-md-1"></div>
</div>
<script src="~/Scripts/jquery-ui-1.10.2.js"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<link href="~/Content/datepicker.min.css" rel="stylesheet" />
<script src="~/Scripts/bootstrap-datepicker.min.js"></script>
<script src="~/Scripts/jquery.validationEngine-en.js"></script>
<script src="~/Scripts/jquery.validationEngine.js"></script>
<script src="~/Scripts/Custom/account.js"></script>
<script src="~/Scripts/toastr.min.js"></script>
<script type="text/javascript">
    $(function () {
        //$.validator.addMethod("date", function (value, element) { var ok = true; try { $.datepicker.parseDate('dd-mm-yy', value); } catch (err) { ok = false; } return ok; });
        //$(".datefield").datepicker({ dateFormat: 'dd-mm-yy'/*, changeMonth: true, changeYear: true, currentText: 'Now' */ });
        $.validator.addMethod("date", function (value, element) { var ok = true; try { $.datepicker.parseDate('dd-mm-yy', value); } catch (err) { ok = false; } return ok; });

        $('.date').datepicker({ /*startDate: new Date(),*/ format: "dd-mm-yyyy", todayHighlight: true, autoclose: true, });
    });

    function DateFormat(field, rules, i, options) { var regex = /^(0[1-9]|[12][0-9]|3[01])[- /.](0[1-9]|1[012])[- /.](19|20)\d\d$/; if (!regex.test(field.val())) { return "Please enter date in dd/MM/yyyy format." } }
</script>
