@model WebInventory.ViewModels.ResetPasswordVM

@{
    ViewBag.Title = "ResetPassword";
    //Layout = "~/Views/Shared/_MainLayout.cshtml";
    Layout = ViewBag.SharedLayout;
}

@*@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
*@
<style type="text/css">
    body {
        background: url(../content/Images/pattern.png) 0 bottom repeat !important;
    }
</style>
<div class="container" style="margin-top: 10px;">
    <div class="row">
        <div class="col-md-4"></div>
        <div class="col-md-4">
            <div class="panel panel-default">
                <div class="panel-body">
                    <fieldset>
                        <legend>
                            <a href="@ViewBag.BackUrl"><span class="arrow-left" style="float: left; display: inline-block; padding-right: 2%;"><i class="fa fa-arrow-left" aria-hidden="true"></i></span></a>
                            <span class="group-addon fa-titles"><i class="fa fa-key" aria-hidden="true"></i></span>
                            <h2 style="display: inline; margin-left: 2%;">Reset Password</h2>
                        </legend>

                        <form id="resetpwd">
                            @*<div class="col-md-12 spacer10">
                                <div id="divMessage" class="row-fluid text-center alert alert-warning" style="display: none;">
                                </div>
                            </div>*@
                            <div class="col-md-12 spacer10">
                                @Html.LabelFor(model => model.RegisteredEmail, new { @class = "control-label" })
                            </div>
                            <div class="col-md-12 spacer10">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="fa fa-envelope"></i></span>
                                    @Html.TextBoxFor(model => model.RegisteredEmail, new { @class = "form-control validate[required,custom[email]]", autocomplete = "off", data_errormessage = "Invalid Email Address", placeholder = "Enter registered email*" })
                                    @Html.ValidationMessageFor(model => model.RegisteredEmail, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            @if (Request.QueryString["tg"] == "" || Request.QueryString["tg"] == null)
                            {
                                <div class="col-md-12 spacer10">
                                    @Html.LabelFor(model => model.OldPassword, new { @class = "control-label" })
                                </div>
                                <div class="col-md-12 spacer10">
                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="fa fa-key"></i></span>
                                        @Html.PasswordFor(model => model.OldPassword, new { @class = "form-control", autocomplete = "off", placeholder = "Enter Old Password*" })
                                        @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            }
                            else
                            {
                                @Html.HiddenFor(model => model.OldPassword)
                            }

                            <div class="col-md-12 spacer10">
                                @Html.LabelFor(model => model.NewPassword, new { @class = "control-label" })
                            </div>
                            <div class="col-md-12 spacer10">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="fa fa-key"></i></span>
                                    @Html.PasswordFor(model => model.NewPassword, new { @class = "form-control validate[required]", autocomplete = "off", data_errormessage = "New Password could not be blank", placeholder = "Enter New Password*" })
                                    @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-12 spacer10">
                                @Html.LabelFor(model => model.ConfirmPassword, new { @class = "control-label" })
                            </div>
                            <div class="col-md-12 spacer10">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="fa fa-key"></i></span>
                                    @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control validate[required,equals[NewPassword]]", autocomplete = "off", data_errormessage = "Confirm Password should be same as password", placeholder = "Enter Confirm Password*" })
                                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="row-fluid">
                                <div class="col-md-12 spacerM10">
                                    <button id="btnResetPwd" type="submit" data-req-url="@Url.Action("ResetPassword", "Account")" value="Reset" data-loading-text="<i class='fa fa-circle-o-notch fa-spin'></i> Processing.." 
                                        class="btn btn-themed" style="display: block; width: 100%;">
                                        Reset</button>
                                </div>
                                @*<span class="process"></span>*@
                            </div>
                        </form>
                    </fieldset>
                </div>
            </div>
        </div>
        <div class="col-md-4"></div>
    </div>
</div>
}

<link href="~/Content/Fonts/font-awesome/css/font-awesome.min.css" rel="stylesheet" />
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="~/Scripts/Custom/jscommon.js"></script>
<link href="~/Content/validationEngine.jquery.css" rel="stylesheet" />
<script src="~/Scripts/jquery.validationEngine-en.js"></script>
<script src="~/Scripts/jquery.validationEngine.js"></script>
<script src="~/Scripts/Custom/account.js"></script>
